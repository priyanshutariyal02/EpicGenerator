import React, { useState } from 'react'
import { useNavigate } from "react-router-dom";
import { preview } from "../assets";
import { getRandomPrompt } from "../utils";
import { FromField, Loader } from "../components";

const CreatePost = () => {
  
    const [form, setForm] = useState({
        name: '',
        prompt: '',
        photo: '',
    });
    const [generatingImg, setGeneratingImg] = useState(false);

    const handleChange = (e) => {
        setForm({ ...form, [e.target.name]: e.target.value })
    }

    const handleSupriseMe = () => {
        const randomPrompt = getRandomPrompt(form.prompt);
        setForm({ ...form, prompt: randomPrompt })
    }

    const generateImage = async () => {
        if (form.prompt) {
            try {
                setGeneratingImg(true);
                const response = await fetch('http://localhost:5000/generate-image', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        prompt: form.prompt,
                    }),
                });

                const data = await response.json();

                setForm({ ...form, photo: data.image_url });

            } catch (err) {
                alert(err);
            } finally {
                setGeneratingImg(false);
            }
        } else {
            alert('Please provide a proper prompt');
        }
    };

    return (
        <section className="max-w-7xl mx-auto">
            <div>
                <h1 className="font-extrabold text-[#222328] text-[50px]">Welcome</h1>
                <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">Create imaginative and visually stunning images generated by EpiGenerator</p>
            </div>
            <form className="mt-16 flex flex-col justify-center w-full">
                <div className="flex flex-col gap-5">
                    <FromField
                        LableName="Prompt:"
                        type="text"
                        name="prompt"
                        placeholder="Type any prompt"
                        value={form.prompt}
                        handleChange={handleChange}
                        isSupriseMe
                        handleSupriseMe={handleSupriseMe}
                    />
                    <div className="flex gap-10">


                        <div className="mt-10 relative bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-[30%] h-[30%] flex justify-center items-center">
                            {form.photo ? (
                                <img
                                    src={form.photo}
                                    alt={form.prompt}
                                    className="w-full h-full object-contain"
                                />
                            ) : (
                                <img
                                    src={preview}
                                    alt="preview"
                                    className="w-full h-full object-contain opacity-40"
                                />
                            )}
                            {generatingImg && (
                                <div className="absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg"
                                >
                                    <Loader />
                                </div>
                            )}
                        </div>
                    </div>
                </div>
                <div className="mt-10 flex gap-5 ">
                    <button type="button"
                        onClick={generateImage}
                        className="text-white bg-[#00c990] font-medium rounded-md text-sm w-full sm:w-auto px-5 py-2.5 text-center">
                        {generatingImg ? 'Generating...' : 'Generate'}
                    </button>
                </div>
            </form>
        </section>
    )
};
export default CreatePost;

